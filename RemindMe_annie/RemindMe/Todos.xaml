<Page
    x:Class="RemindMe.Todos"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:RemindMe"
    xmlns:md="using:RemindMe.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <md:BoolToVisConverter x:Key="BoolToVisConverter"/>
    </Page.Resources>

    <Grid x:Name="All">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="VisualStateMin0">
                    <VisualState.Setters>
                        <Setter Target="InlineToDoItemViewGrid.(UIElement.Visibility)" Value="Collapsed" />
                        <Setter Target="delete.Visibility" Value="Collapsed" />
                        <Setter Target="ToDoListView.(Grid.ColumnSpan)" Value="2" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="VisualStateMin800">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBlock x:Name="textBlock" Grid.Row="0" Text="Todos" FontSize="30" FontWeight="Bold"  Margin="10,10,30,30"/>
        <AutoSuggestBox x:Name="search" HorizontalAlignment="Right"  Width="200" PlaceholderText="Search......" IsSuggestionListOpen="False" QuerySubmitted="search_QuerySubmitted" QueryIcon="Find" Margin="0,48,10,0" />
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ListView x:Name="ToDoListView" Margin="20" IsItemClickEnabled="True" ItemClick="itemClick" ItemsSource="{x:Bind ViewModel.getItems}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="md:TodoItem">
                        <UserControl>
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>
                                        <VisualState x:Name="narrow">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="0" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="image.Visibility" Value="Collapsed" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="VisualStateMin600">
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="600" />
                                            </VisualState.StateTriggers>
                                            <VisualState.Setters>
                                                <Setter Target="image.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="42"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="100"/>
                                </Grid.ColumnDefinitions>

                                <CheckBox x:Name="checkBox" Grid.Column="0" VerticalAlignment="Center" Height="32" Width="32" Grid.ColumnSpan="2" HorizontalAlignment="Right" Margin="0,34,24,34" Checked="checkBox" Unchecked="uncheckBox" IsChecked="{x:Bind finish, Mode=TwoWay}"/>
                                <Image x:Name="image" Grid.Column="1" Source="{x:Bind img, Mode=TwoWay}" Height="90" Width="90" Margin="0,3,12,7"/>
                                <TextBlock Grid.Column="2" Text="{x:Bind title, Mode=TwoWay}" VerticalAlignment="Center" Foreground="Black" FontWeight="Normal" FontSize="15" LineHeight="20" TextWrapping="Wrap" />
                                <Line Grid.Column="2" Stretch="Fill" Stroke="Black" StrokeThickness="2" X1="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Opacity="0"/>
                                <AppBarButton Grid.Column="3" Icon="Setting" IsCompact="True" VerticalAlignment="Center">
                                    <AppBarButton.Flyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem Text="Edit"/>
                                            <MenuFlyoutItem Text="Delete"/>
                                            <MenuFlyoutItem Text="Share" Click="share_Click"/>
                                        </MenuFlyout>
                                    </AppBarButton.Flyout>
                                </AppBarButton>
                            </Grid>
                        </UserControl>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Grid x:Name="InlineToDoItemViewGrid" Grid.Column="1" >
                <ScrollViewer>
                    <StackPanel>
                        <Image x:Name="pic" Width="350" Height="180" Margin="4" Stretch="Fill" Source="Assets/fruit.jpg" RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <CompositeTransform ScaleX="{Binding Value, ElementName=slider}"
                                    ScaleY="{Binding Value, ElementName=slider}" />
                            </Image.RenderTransform>
                        </Image>
                        <RelativePanel Width="350" Height="46">
                            <AppBarButton x:Name="SelectPictureButton" Icon="Pictures" Label="select" RelativePanel.AlignRightWithPanel="True" Click="SelectPictureButton_Click" Margin="-68,0,0,0" RenderTransformOrigin="2.007,0.525" Height="42" Width="58"/>
                        </RelativePanel>
                        <TextBox x:Name ="title" Width="350" Header="Title" Margin="0,8,0,0" Text=""/>
                        <TextBox Name ="details" Width="350" Height="96" Margin="0,8,0,0" Header="Details" Text="" />
                        <DatePicker Name ="date" Width="350" Margin="0,8,0,0" Header="Due Date" HorizontalAlignment="Center" />
                        <TimePicker Name ="time" Width="350" Margin="0,8,0,0" Header="Due Time" HorizontalAlignment="Center"/>
                        <RelativePanel Width="350" Margin="0,24,0,0">
                            <Button x:Name="createButton" Content="Create" Click="CreatButton_Click"></Button>
                            <Button x:Name="CancelButton" Content="Cancel" RelativePanel.AlignRightWithPanel="True" Click="CancelButton_Click"></Button>
                        </RelativePanel>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
        </Grid>
        <Image x:Name="background" HorizontalAlignment="Left" Grid.RowSpan="2" VerticalAlignment="Bottom" Source="Assets/color.jpg" Canvas.ZIndex="-1" Width="1920" Height="1080" Margin="-110,-382,-1450,-58"/>
    </Grid>

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton x:Name="delete" Icon="Delete" Label="Delete" Click="Delete_Click" Visibility="Collapsed"/>
            <AppBarButton Icon="Add" Label="Add" Click="NewPage_Click"/>
        </CommandBar>
    </Page.BottomAppBar>
</Page>
