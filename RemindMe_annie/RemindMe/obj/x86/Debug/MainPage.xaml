<Page
    x:Class="RemindMe.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:RemindMe"
    xmlns:md="using:RemindMe.Models"
    mc:Ignorable="d">

    <Grid x:ConnectionId='1' x:Name="All" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <!--<VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">

                <VisualState x:Name="VisualStateMin0">
                    <VisualState.Setters>
                        <Setter Target="InlineToDoItemViewGrid.(UIElement.Visibility)" Value="Collapsed"/>
                        <Setter Target="ToDoListView.(Grid.ColumnSpan)" Value="2"/>
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1"/>
                    </VisualState.StateTriggers>
                </VisualState>

                <VisualState x:Name="VisualStateMin800">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800"/>
                    </VisualState.StateTriggers>
                </VisualState>

            </VisualStateGroup>

        </VisualStateManager.VisualStateGroups>-->

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <TextBlock x:ConnectionId='2' x:Name="textBlock" Grid.Row="0" Text="RemindMe" FontSize="30" FontWeight="Bold" Style="{StaticResource HeaderTextBlockStyle}" Margin="10,30,0,0"/>
        <TextBox x:ConnectionId='3' x:Name="SearchBox" Grid.Row="0" Height="20" Width="100" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,100,0" />
        <Button x:ConnectionId='4' x:Name="Search" Content="Search" Grid.Row="0" Height="30" Width="80" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,10,0"                      />

        <Grid Grid.Row="1" Height="400" Width="600" >
            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>-->
            <CalendarView x:ConnectionId='5' x:Name="Calendar" VerticalAlignment="Top" HorizontalAlignment="Center" Height="400" Width="600"                                                                        />
            <!--<Grid Grid.Column="0">
                <CalendarView x:Name="Calendar" VerticalAlignment="Top" HorizontalAlignment="Center" Height="600" Width="600" CalendarViewDayItemChanging="CalendarView_CalendarViewDayItemChanging" />
            </Grid>-->
            <!--<ListView x:Name="ToDoListView" IsItemClickEnabled="True" ItemClick="TodoItem_ItemClicked"
                      ItemsSource="{x:Bind ViewModel.AllItems}">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="md:TodoItem">
                        <UserControl>
                            <Grid Height="100">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup>
                                        <VisualState>
                                            <VisualState.Setters>
                                                <Setter Target="image.Visibility" Value="Collapsed"/>
                                            </VisualState.Setters>
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="1"/>
                                            </VisualState.StateTriggers>
                                        </VisualState>
                                        <VisualState x:Name="VisualStateMin600">
                                            <VisualState.Setters>
                                                <Setter Target="image.Visibility" Value="Visible"/>
                                            </VisualState.Setters>
                                            <VisualState.StateTriggers>
                                                <AdaptiveTrigger MinWindowWidth="600"/>
                                            </VisualState.StateTriggers>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="42" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="100" />
                                </Grid.ColumnDefinitions>

                                <CheckBox Grid.Column="0" VerticalAlignment="Center" Height="32" Width="32" Click="CheckBox_Click"/>
                                <Image x:Name="image" Source="{x:Bind image_path}" Grid.Column="1" Height="90" Width="90" Margin="20,0,20,0" />
                                <TextBlock Grid.Column="2" Text="{x:Bind title}" VerticalAlignment="Center" Foreground="Black" />
                                <Line Grid.Column="2" Stretch="Fill" Stroke="Black" StrokeThickness="2" X1="1" VerticalAlignment="Center" Opacity="0" />
                                <AppBarButton Grid.Column="3" Icon="Setting" IsCompact="True" VerticalAlignment="Center">
                                    <AppBarButton.Flyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem Text="Edit" Click="Edit_Clicked" />
                                            <MenuFlyoutItem Text="Delete" Click="DeleteButton_Clicked" />
                                        </MenuFlyout>
                                    </AppBarButton.Flyout>
                                </AppBarButton>
                            </Grid>
                        </UserControl>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>-->

            <!--<Grid x:Name="InlineToDoItemViewGrid" Grid.Column="1" >
                <ScrollViewer Height="Auto">
                    <StackPanel>

                        <Image x:Name="Image1" Width="350" Height="180" Margin="4" Source="Assets/background.jpg">
                            <Image.RenderTransform>
                                <CompositeTransform ScaleX="{Binding Value, ElementName=MySlider}"
                                        ScaleY="{Binding Value, ElementName=MySlider}"/>
                            </Image.RenderTransform>
                        </Image>
                        <Slider Padding="50,0,50,0" Minimum="0.5" Maximum="1.0" StepFrequency="0.1" x:Name="MySlider"/>
                        <RelativePanel Width="350">
                            <AppBarButton x:Name="SelectPictureButton" Icon="Pictures" Label="select" RelativePanel.AlignRightWithPanel="True" Click="SelectPictureButton_Click"/>
                        </RelativePanel>
                        <TextBox x:Name="Title" Width="350" Header="Title" Margin="0,12,0,0" />
                        <TextBox x:Name="Details" Width="350" Height="96" Margin="0,12,0,0" Header="Details" />
                        <DatePicker x:Name="DueDate" Width="350" Margin="0,12,0,0" Header="Due Date" HorizontalAlignment="Center" />
                        <RelativePanel Width="350" Margin="0,24,0,0">
                            <Button x:Name="createButton" Content="Create" Click="createButton_Click"></Button>
                            <Button x:Name="CancelButton" Content="Cancel" RelativePanel.AlignRightWithPanel="True"></Button>
                        </RelativePanel>
                    </StackPanel>
                </ScrollViewer>
            </Grid>-->

        </Grid>

    </Grid>

    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton x:ConnectionId='6' x:Name="DeleteAppBarButton" Icon="Add" Label="Add"                               />
        </CommandBar>
    </Page.BottomAppBar>

</Page>

